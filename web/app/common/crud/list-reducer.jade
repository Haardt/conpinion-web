list-reducer
  script(type='text/coffeescript').

    @reduce = (state = null, action) =>
      if state == null
        return @initialState()

      switch action.type

        # If we show a new section we must clear our gui state...
        when 'new-route'
          state = $.extend {}, state,
            phase: 'NONE'
        when "show-new-section"
          state = $.extend {}, state,
            phase: 'START'

        when "#{'#{@opts.entityName}'}-list-request"
          state = $.extend {}, state, { phase: 'FETCHING' }

        when "#{'#{@opts.entityName}'}-list-load"
          state = $.extend {}, state,
            phase: 'LOADED'
            lastUpdate: Date.now()
            entityById: action.data.reduce (acc, entry) ->
                acc[entry.id] = entry; acc
              , {}
            entities: action.data.map (entry) -> entry.id

        when "#{'#{@opts.entityName}'}-list-show"
          state = $.extend {}, state,
            phase: 'SHOW'

        when "#{'#{@opts.entityName}'}-delete-entry"
          state = $.extend {}, state,
            phase: 'SYNCING'
            deletedEntityId: action.id
            entityById: delete state.entityById[action.id]; state.entityById
            entities: state.entities.filter (id) -> id != action.id

        when "#{'#{@opts.entityName}'}-entity-synced"
          state = $.extend {}, state,
            phase: 'SYNCED'
            editObject: null
            createdObject: null
            deletedEntityId: -1

      #console.log 'list reducer', action, state

      state


    @initialState = () ->
      initialState =
        phase: 'NONE'
        lastUpdate: null
        entityById: {}
        entities: []
        deletedEntityId: -1
